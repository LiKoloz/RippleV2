x-common-environment: &global-environment
  RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
  AUTH_QUEUE: auth
  COMMENTS_QUEUE: comments
  POSTS_QUEUE: posts
  GATEWAYAPI_QUEUE: gatewayapi
  USERS_QUEUE: users

services:
  frontend:
    image: front_svelte
    build:
      context: ./client
    ports:
      - "5173:5173"
    depends_on:
      - gatewayapi
    develop:
      watch:
        - action: rebuild
          path: .

  auth:
    image: auth
    build:
      context: ./Server/Auth
    environment:
      <<: *global-environment
      RABBITMQ_QUEUE: auth
    develop:
      watch:
        - action: rebuild
          path: .
    depends_on:
      rabbitmq:
        condition: service_healthy
 

  comments:
    image: comments
    build:
      context: ./Server/Comments
    environment:
      <<: *global-environment
      RABBITMQ_QUEUE: comments
      DB_HOST: db_comments
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    develop:
      watch:
        - action: rebuild
          path: .
    depends_on:
      db_comments:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  posts:
    image: posts
    build:
      context: ./Server/Posts
    environment:
      <<: *global-environment
      RABBITMQ_QUEUE: posts
      DB_HOST: db_posts
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    develop:
      watch:
        - action: rebuild
          path: .
    depends_on:
      db_posts:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
        
  gatewayapi:
    image: gatewayapi
    build:
      context: ./Server/Gatewayapi
    environment:
      <<: *global-environment
      RABBITMQ_QUEUE: gatewayapi
      PORT: ${BACK_PORT}
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    depends_on:
      - auth
      - comments
      - posts
      - users
      - rabbitmq
    develop:
      watch:
        - action: rebuild
          path: .
         
        
  users:
    image: users
    build:
      context: ./Server/Users
    environment:
      <<: *global-environment
      RABBITMQ_QUEUE: users
      DB_HOST: db_users
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    develop:
      watch:
        - action: rebuild
          path: .
    depends_on:
      db_users:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "15672:15672" # Web UI
      - "5672:5672"   # AMQP
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
  db_comments:
    image: postgres:16.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
  db_posts:
    image: postgres:16.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
  db_users:
    image: postgres:16.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s